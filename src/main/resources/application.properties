#### server
server.port = 8080
server.address = 127.0.0.1
#指定发生错误时，跳转的URL
server.error.path = /error
#### db
spring.datasource.druid.username = root
spring.datasource.druid.password =
spring.datasource.druid.url = jdbc:mysql://localhost:3306/admin_template?characterEncoding=utf8&useSSL=false&serverTimezone=GMT%2b8&autoReconnect=true&failOverReadOnly=false
spring.datasource.type = com.alibaba.druid.pool.DruidDataSource
spring.datasource.druid.driver-class-name = com.mysql.cj.jdbc.Driver
#### druid
# 配置最大连接
spring.datasource.druid.maxActive = 100
# 配置初始化连接池大小
spring.datasource.druid.initialSize = 1
# 配置必须保持连接的最小值
spring.datasource.druid.minIdle = 1
# 配置最大等待时间
spring.datasource.druid.maxWait = 60000
spring.datasource.druid.maxPoolPreparedStatementPerConnectionSize = 20
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.druid.timeBetweenEvictionRunsMillis = 60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.druid.minEvictableIdleTimeMillis = 300000
# 是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，比如说oracle。在mysql下建议关闭。
spring.datasource.druid.poolPreparedStatements = false
# 验证数据库的有效性
spring.datasource.druid.validation-query = SELECT 1 FROM DUAL
# 验证连接的有效性
spring.datasource.druid.test-while-idle = true
# 获取连接时候验证，会影响性能
spring.datasource.druid.test-on-borrow = true
# 在连接归还到连接池时是否测试该连接
spring.datasource.druid.test-on-return = false
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.druid.connectionProperties = druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000;
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.druid.filters = stat, wall

#### jpa
# Specify the DBMS
spring.jpa.database = MYSQL
# Show or not log for each sql query
spring.jpa.show-sql = true
# Hibernate ddl auto (create, create-drop, update)
spring.jpa.hibernate.ddl-auto = update

#### redis
# Redis数据库索引（默认为0）
spring.redis.database = 1
# Redis服务器地址
spring.redis.host = 127.0.0.1
# Redis服务器连接端口
spring.redis.port = 6379
# Redis服务器连接密码（默认为空）
spring.redis.password =
# 连接池最大连接数（使用负值表示没有限制） 默认 8
spring.redis.lettuce.pool.max-active = 8
# 连接池最大阻塞等待时间（使用负值表示没有限制） 默认 -1
spring.redis.lettuce.pool.max-wait = -1
# 连接池中的最大空闲连接 默认 8
spring.redis.lettuce.pool.max-idle = 8
# 连接池中的最小空闲连接 默认 0
spring.redis.lettuce.pool.min-idle = 0
# 连接超时时间（毫秒）
spring.redis.timeout = 30000

#### 日志配置
logging.file.path = ${source.file.path}/log

#### 文件配置
# 默认支持文件上传
spring.servlet.multipart.enabled = true
# 上传文件的临时目录
spring.servlet.multipart.location = ${source.file.path}/temporary
# 最大支持文件大小
spring.servlet.multipart.max-file-size=2MB
# 最大支持请求大小
spring.servlet.multipart.max-request-size=2MB
# 文件保存路径
source.file.path = C:/Users/86187/Desktop
# 文件路径映射到该url
source.file.mapping = /provider/source

#### 404异常配置
#出现no-handler-found错误时, 直接抛出异常
spring.mvc.throw-exception-if-no-handler-found = true
#不要为我们工程中的资源文件建立映射 关闭静态文件访问
spring.web.resources.add-mappings = false